{"version":3,"file":"index.js","mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;ACAAA,QAAQ,CAACC,gBAAgB,CAAE,kBAAkB,EAAE,MAAM;EACpD,MAAMC,MAAM,GAAGF,QAAQ,CAACG,aAAa,CAAE,uBAAwB,CAAC;EAE7DD,MAAM,CAACD,gBAAgB,CAAC,OAAO,EAAE,MAAM;IACnC,MAAMG,UAAU,GAAGJ,QAAQ,CAACK,IAAI,CAACC,SAAS,CAACC,QAAQ,CAAE,cAAe,CAAC;IAC3E,IAAKH,UAAU,EAAG;MACjBF,MAAM,CAACM,YAAY,CAAE,cAAc,EAAE,OAAQ,CAAC;MAC9CR,QAAQ,CAACK,IAAI,CAACC,SAAS,CAACG,MAAM,CAAE,cAAe,CAAC;IACjD,CAAC,MAAM;MACNP,MAAM,CAACM,YAAY,CAAE,cAAc,EAAE,MAAO,CAAC;MAC7CR,QAAQ,CAACK,IAAI,CAACC,SAAS,CAACI,GAAG,CAAE,cAAe,CAAC;IAC9C;EACE,CAAC,CAAC;;EAEL;EACA,IAAKC,MAAM,CAACC,UAAU,CAAE,8BAA+B,CAAC,CAACC,OAAO,EAAE;IACjEb,QAAQ,CAACK,IAAI,CAACC,SAAS,CAACI,GAAG,CAAE,cAAe,CAAC;IAC7CR,MAAM,CAACM,YAAY,CAAE,cAAc,EAAE,MAAO,CAAC;EAC9C;AAED,CAAC,CAAC;;;;;;;;;;;;;;;;;;UEpBF;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;ACN6B","sources":["webpack://@caweb/html-webpack-plugin/./src/styles/index.scss?73e6","webpack://@caweb/html-webpack-plugin/./src/scripts/dark-mode.js","webpack://@caweb/html-webpack-plugin/./src/scripts/index.js","webpack://@caweb/html-webpack-plugin/webpack/bootstrap","webpack://@caweb/html-webpack-plugin/webpack/runtime/make namespace object","webpack://@caweb/html-webpack-plugin/./src/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","document.addEventListener( 'DOMContentLoaded', () => {\r\n\tconst button = document.querySelector( '.button__theme-toggle' );\r\n\r\n    button.addEventListener('click', () => {\r\n        const isDarkMode = document.body.classList.contains( 'is-dark-mode' );\r\n\t\tif ( isDarkMode ) {\r\n\t\t\tbutton.setAttribute( 'aria-pressed', 'false' );\r\n\t\t\tdocument.body.classList.remove( 'is-dark-mode' );\r\n\t\t} else {\r\n\t\t\tbutton.setAttribute( 'aria-pressed', 'true' );\r\n\t\t\tdocument.body.classList.add( 'is-dark-mode' );\r\n\t\t}\r\n    })\r\n\r\n\t// Set is-dark-mode class if user has requested dark mode.\r\n\tif ( window.matchMedia( '(prefers-color-scheme: dark)' ).matches ){\r\n\t\tdocument.body.classList.add( 'is-dark-mode' );\r\n\t\tbutton.setAttribute( 'aria-pressed', 'true' );\r\n\t}\r\n\r\n});\r\n","import './dark-mode.js';","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import './styles/index.scss';\r\n\r\nimport './scripts/index.js';"],"names":["document","addEventListener","button","querySelector","isDarkMode","body","classList","contains","setAttribute","remove","add","window","matchMedia","matches"],"sourceRoot":""}